# The ``3-say_my_name`` module
============================================
How to use 3-say_my_name.py
============================================

This library contains a single function called ``say_my_name()``.

``say_my_name()`` prints a person's first name and last name.

Importing the function say_my_name.
    >>> say_my_name = __import__('3-say_my_name').say_my_name

Correct usage with first_name and last_name provided.
    >>> say_my_name("Wendy", "Munyasi")
    My name is Wendy Munyasi

    >> say_my_name("Breezy")
    My name is Breezy

Incorrect usage with last_name set as None.
    >>> say_my_name("Wendy", None)
    Traceback (most recent call last):
        ...
    TypeError: last_name must be a string

Incorrect usage with both first_name and last_name set as None.
    >>> say_my_name(None, None)
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

Incorrect usage with first_name set as None.
    >>> say_my_name(None, "Breezy")
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

Incorrect usage with non-string types for first_name and last_name.
    >>> say_my_name(1, "Breezy")
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

    >>> say_my_name("Chris", [4])
    Traceback (most recent call last):
        ...
    TypeError: last_name must be a string

Incorrect usage with more than two arguments passed to say_my_name().
    >>> say_my_name("Chris", "Breezy", "Brown") #doctest: +ELLIPSIS
    Traceback (most recent call last):
        ...
    TypeError: say_my_name() takes from 1 to 2 positional arguments but ...
